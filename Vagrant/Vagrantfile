Vagrant.configure("2") do |config|
  config.vm.define "pfsense" do |cfg|
    cfg.vm.box = "kennyl/pfsense"
    cfg.vm.box_version = "2.4.0"
    cfg.vm.hostname = "pfsense"
    cfg.vbguest.auto_update = false
    cfg.vm.synced_folder ".", "/vagrant", disabled: true
    # Configuring em1 ip address from the console is still a requirement
    cfg.vm.network :private_network, virtualbox__intnet: "intnet", ip: "172.16.163.222", auto_config: false
    cfg.vm.network "forwarded_port", guest: 80, host: 8080
    cfg.vm.network "forwarded_port", guest: 443, host: 8443
    cfg.vm.network "forwarded_port", guest: 3000, host: 3000

    cfg.vm.provider :virtualbox do |vb, override|
      vb.name = "DEMO-PFSENSE"
      vb.gui = false
      vb.memory = 1024
      vb.cpus = 2
    end
  end

  config.vm.define "acng" do |cfg|
    cfg.vm.box = "bento/ubuntu-16.04"
    cfg.vm.hostname = "acng-test"
    cfg.vbguest.auto_update = true
    config.vm.provision :shell, path: "bootstrap.sh"
    config.vm.provision "reload"
    cfg.vm.network :private_network, virtualbox__intnet: "intnet", ip: "172.16.163.223", auto_config: false

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = false
      vb.name = "DEMO-ACNG"
      vb.customize ["modifyvm", :id, "--memory", 512]
      vb.customize ["modifyvm", :id, "--cpus", 1]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

  config.vm.define "soanalyst01" do |cfg|
    #cfg.vm.box = "file://../Boxes/securityonion_1604_vmware.box"
    cfg.vm.box = "dlee35/securityonion"
    #cfg.vm.box_version = "16.04.6.1"
    cfg.vm.hostname = "soanalyst01"
    cfg.vm.provision :shell, path: "scripts/securityonion-rename-interfaces.sh"
    cfg.vm.provision "reload"
    cfg.vm.provision :shell, path: "scripts/securityonion-setup.sh"
    cfg.vm.provision "reload"

    cfg.vm.provider "vmware_desktop" do |v, override|
      override.vm.synced_folder ".", "/vagrant", type: "rsync"
      v.vmx["displayname"] = "DEMO-SOANALYST01"
      v.vmx["ethernet1.connectiontype"] = "custom"
      v.vmx["ethernet1.present"] = "TRUE"
      v.vmx["ethernet1.virtualdev"] = "e1000"
      v.vmx["ethernet1.vnet"] = "VMnet7"
      v.memory = 2048
      v.cpus = 2
      v.gui = true
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = false
      vb.name = "DEMO-SOANALYST01"
      override.vm.network :private_network, virtualbox__intnet: "intnet", ip: "172.16.163.101", auto_config: false
      vb.customize ["modifyvm", :id, "--memory", 2048]
      vb.customize ["modifyvm", :id, "--cpus", 2]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

  config.vm.define "somaster" do |cfg|
    cfg.vm.box = "dlee35/securityonion"
    cfg.vm.hostname = "somaster"
    cfg.vm.provision :shell, path: "scripts/securityonion-rename-interfaces.sh"
    cfg.vm.provision "reload"
    cfg.vm.provision :shell, path: "scripts/securityonion-setup.sh"
    cfg.vm.provision "reload"
    cfg.vm.network "forwarded_port", guest: 443, host: 8843, auto_correct: true

    cfg.vm.provider "vmware_desktop" do |v, override|
      override.vm.synced_folder ".", "/vagrant", type: "rsync"
      v.vmx["displayname"] = "DEMO-SOMASTER01"
      v.vmx["ethernet1.connectiontype"] = "custom"
      v.vmx["ethernet1.present"] = "TRUE"
      v.vmx["ethernet1.virtualdev"] = "e1000"
      v.vmx["ethernet1.vnet"] = "VMnet7"
      v.memory = 8192
      v.cpus = 4
      v.gui = true
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      override.vm.network :private_network, virtualbox__intnet: "intnet", ip: "172.16.163.200", auto_config: false
      vb.gui = false
      vb.name = "DEMO-SOMASTER01"
      vb.customize ["modifyvm", :id, "--memory", 8192]
      vb.customize ["modifyvm", :id, "--cpus", 4]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

  config.vm.define "sostorage01" do |cfg|
    cfg.vm.box = "dlee35/securityonion"
    cfg.vm.hostname = "sostorage01"
    cfg.vm.provision :shell, path: "scripts/securityonion-rename-interfaces.sh"
    cfg.vm.provision "reload"
    cfg.vm.provision :shell, path: "scripts/securityonion-setup.sh"
    cfg.vm.provision "reload"

    cfg.vm.provider "vmware_desktop" do |v, override|
      override.vm.synced_folder ".", "/vagrant", type: "rsync"
      v.vmx["displayname"] = "DEMO-SOSTORAGE01"
      v.vmx["ethernet1.connectiontype"] = "custom"
      v.vmx["ethernet1.present"] = "TRUE"
      v.vmx["ethernet1.virtualdev"] = "e1000"
      v.vmx["ethernet1.vnet"] = "VMnet7"
      v.memory = 8192
      v.cpus = 4
      v.gui = true
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = false
      vb.name = "DEMO-SOSTORAGE01"
      override.vm.network :private_network, virtualbox__intnet: "intnet", ip: "172.16.163.215", auto_config: false
      vb.customize ["modifyvm", :id, "--memory", 8192]
      vb.customize ["modifyvm", :id, "--cpus", 4]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

  config.vm.define "sosensor01" do |cfg|
    cfg.vm.box = "dlee35/securityonion"
    cfg.vm.hostname = "sosensor01"
    cfg.vm.provision :shell, path: "scripts/securityonion-rename-interfaces.sh"
    cfg.vm.provision "reload"
    cfg.vm.provision :shell, path: "scripts/securityonion-setup.sh"
    cfg.vm.provision "reload"

    cfg.vm.provider "vmware_desktop" do |v, override|
      override.vm.synced_folder ".", "/vagrant", type: "rsync"
      v.vmx["displayname"] = "DEMO-SOSENSOR01"
      v.vmx["ethernet1.connectiontype"] = "custom"
      v.vmx["ethernet1.present"] = "TRUE"
      v.vmx["ethernet1.virtualdev"] = "e1000"
      v.vmx["ethernet1.vnet"] = "VMnet7"
      v.vmx["ethernet2.connectiontype"] = "custom"
      v.vmx["ethernet2.present"] = "TRUE"
      v.vmx["ethernet2.virtualdev"] = "e1000"
      v.vmx["ethernet2.vnet"] = "VMnet6"
      v.memory = 8192
      v.cpus = 4
      v.gui = true
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = false
      vb.name = "DEMO-SOSENSOR01"
      override.vm.network :private_network, virtualbox__intnet: "intnet", ip: "172.16.163.210", auto_config: false
      override.vm.network :private_network, virtualbox__intnet: "intnet01", auto_config: false
      vb.customize ["modifyvm", :id, "--memory", 8192]
      vb.customize ["modifyvm", :id, "--cpus", 4]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

  config.vm.define "sosensor02" do |cfg|
    cfg.vm.box = "dlee35/securityonion"
    cfg.vm.hostname = "sosensor02"
    cfg.vm.provision :shell, path: "scripts/securityonion-rename-interfaces.sh"
    cfg.vm.provision "reload"
    cfg.vm.provision :shell, path: "scripts/securityonion-setup.sh"
    cfg.vm.provision "reload"

    cfg.vm.provider "vmware_desktop" do |v, override|
      override.vm.synced_folder ".", "/vagrant", type: "rsync"
      v.vmx["displayname"] = "DEMO-SOSENSOR02"
      v.vmx["ethernet1.connectiontype"] = "custom"
      v.vmx["ethernet1.present"] = "TRUE"
      v.vmx["ethernet1.virtualdev"] = "e1000"
      v.vmx["ethernet1.vnet"] = "VMnet7"
      v.vmx["ethernet2.connectiontype"] = "custom"
      v.vmx["ethernet2.present"] = "TRUE"
      v.vmx["ethernet2.virtualdev"] = "e1000"
      v.vmx["ethernet2.vnet"] = "VMnet7"
      v.memory = 8192
      v.cpus = 4
      v.gui = true
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = false
      vb.name = "DEMO-SOSENSOR02"
      override.vm.network :private_network, virtualbox__intnet: "intnet", ip: "172.16.163.220", auto_config: false
      override.vm.network :private_network, virtualbox__intnet: "intnet", auto_config: false
      vb.customize ["modifyvm", :id, "--memory", 4096]
      vb.customize ["modifyvm", :id, "--cpus", 4]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

  config.vm.define "web" do |cfg|
    cfg.vm.box = "bento/ubuntu-16.04"
    cfg.vm.hostname = "web"
    cfg.vm.synced_folder "./wazuh", "/opt/wazuh"
    config.vm.provision :shell, path: "bootstrap.sh"
    config.vm.provision "reload"
    cfg.vm.network :private_network, virtualbox__intnet: "intnet", auto_config: false

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = false
      vb.name = "DEMO-WEB"
      vb.customize ["modifyvm", :id, "--memory", 2048]
      vb.customize ["modifyvm", :id, "--cpus", 2]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end

    cfg.vm.provider "vmware_fusion" do |v, override|
      v.vmx["displayname"] = "DEMO-WEB"
      v.memory = 2048
      v.cpus = 1
      v.gui = true
    end

    cfg.vm.provider "vmware_desktop" do |v, override|
      v.vmx["displayname"] = "DEMO-WEB"
      v.memory = 2048
      v.cpus = 2
      v.gui = true
    end
  end

  config.vm.define "dc" do |cfg|
    cfg.vm.box = "detectionlab/win2016"
    cfg.vm.hostname = "dc"
    cfg.vbguest.auto_update = false
    cfg.vm.synced_folder "./wazuh", "/opt/wazuh"
    cfg.vm.boot_timeout = 600
    cfg.winrm.transport = :plaintext
    cfg.vm.communicator = "winrm"
    cfg.winrm.basic_auth_only = true
    cfg.winrm.timeout = 300
    cfg.winrm.retry_limit = 20
    cfg.vm.network :private_network, virtualbox__intnet: "intnet", ip: "172.16.163.211", gateway: "172.16.163.222"

    cfg.vm.provision "shell", path: "scripts/fix-second-network.ps1", run: "always", privileged: false, args: "172.16.163.211"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/download_palantir_wef.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/download_palantir_osquery.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-splunkuf.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-inputsconf.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-utilities.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-redteam.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-choco-extras.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-osquery.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-sysinternals.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/configure-ou.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/configure-wef-gpo.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/configure-powershelllogging.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/configure-AuditingPolicyGPOs.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/configure-rdp-user-gpo.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/configure-disable-windows-defender-gpo.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-autorunstowineventlog.ps1", privileged: false
    cfg.vm.provision "shell", inline: 'wevtutil el | Select-String -notmatch "Microsoft-Windows-LiveId" | Foreach-Object {wevtutil cl "$_"}', privileged: false
    cfg.vm.provision "shell", inline: "Set-SmbServerConfiguration -AuditSmb1Access $true -Force", privileged: false

    cfg.vm.provider "vmware_desktop" do |v, override|
      v.vmx["displayname"] = "DEMO-DC"
      v.memory = 3072
      v.cpus = 2
      v.gui = true
      v.enable_vmrun_ip_lookup = false
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = false
      vb.name = "DEMO-DC"
      vb.default_nic_type = "82545EM"
      vb.customize ["modifyvm", :id, "--memory", 3072]
      vb.customize ["modifyvm", :id, "--cpus", 2]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

  config.vm.define "wef" do |cfg|
    cfg.vm.box = "detectionlab/win2016"
    cfg.vm.hostname = "wef"
    cfg.vm.synced_folder "./wazuh", "/opt/wazuh"
    cfg.vm.boot_timeout = 600
    cfg.winrm.transport = :plaintext
    cfg.vm.communicator = "winrm"
    cfg.winrm.basic_auth_only = true
    cfg.winrm.timeout = 300
    cfg.winrm.retry_limit = 20
    cfg.vm.network :private_network, virtualbox__intnet: "intnet", ip: "172.16.163.212", gateway: "172.16.163.222"

    cfg.vm.provision "shell", path: "scripts/fix-second-network.ps1", run: "always", privileged: false, args: "-ip 172.16.163.212 -dns 172.16.163.211"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/download_palantir_wef.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/download_palantir_osquery.ps1", privileged: false
    cfg.vm.provision "shell", inline: 'wevtutil el | Select-String -notmatch "Microsoft-Windows-LiveId" | Foreach-Object {wevtutil cl "$_"}', privileged: false
    cfg.vm.provision "shell", path: "scripts/install-wefsubscriptions.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-splunkuf.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-windows_ta.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-inputsconf.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-utilities.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-redteam.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-choco-extras.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-osquery.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-sysinternals.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/configure-pslogstranscriptsshare.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-autorunstowineventlog.ps1", privileged: false
    cfg.vm.provision "shell", inline: "Set-SmbServerConfiguration -AuditSmb1Access $true -Force", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-microsoft-ata.ps1", privileged: false

    cfg.vm.provider "vmware_desktop" do |v, override|
      v.vmx["displayname"] = "DEMO-WEF"
      v.memory = 2048
      v.cpus = 2
      v.gui = true
      v.enable_vmrun_ip_lookup = false
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = false
      vb.name = "DEMO-WEF"
      vb.default_nic_type = "82545EM"
      vb.customize ["modifyvm", :id, "--memory", 2048]
      vb.customize ["modifyvm", :id, "--cpus", 2]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

  config.vm.define "win10" do |cfg|
    cfg.vm.box = "detectionlab/win10"
    cfg.vm.hostname = "win10"
    cfg.vm.boot_timeout = 1200
    cfg.vm.communicator = "winrm"
    cfg.winrm.basic_auth_only = true
    cfg.winrm.timeout = 1200
    cfg.winrm.retry_limit = 20
    cfg.vm.network :private_network, virtualbox__intnet: "intnet", ip: "172.16.163.100", gateway: "172.16.163.222", dns: "172.16.163.211"

    cfg.vm.provision "shell", path: "scripts/fix-second-network.ps1", run: "always", privileged: false, args: "-ip 172.16.163.100 -dns 172.16.163.211"
    cfg.vm.provision "shell", path: "scripts/MakeWindows10GreatAgain.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/download_palantir_wef.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/download_palantir_osquery.ps1", privileged: false
    cfg.vm.provision "shell", inline: 'wevtutil el | Select-String -notmatch "Microsoft-Windows-LiveId" | Foreach-Object {wevtutil cl "$_"}', privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-splunkuf.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-utilities.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-redteam.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-choco-extras.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-osquery.ps1", privileged: false
    #cfg.vm.provision "shell", path: "scripts/install-inputsconf.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-sysinternals.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/install-autorunstowineventlog.ps1", privileged: false

    cfg.vm.provider "vmware_desktop" do |v, override|
      v.vmx["displayname"] = "DEMO-WIN10"
      v.vmx["gui.fullscreenatpoweron"] = "FALSE"
      v.vmx["gui.viewModeAtPowerOn"] = "windowed"
      v.memory = 2048
      v.cpus = 1
      v.gui = true
      v.enable_vmrun_ip_lookup = false
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = false
      vb.name = "DEMO-WIN10"
      vb.default_nic_type = "82545EM"
      vb.customize ["modifyvm", :id, "--memory", 2048]
      vb.customize ["modifyvm", :id, "--cpus", 1]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end
end
